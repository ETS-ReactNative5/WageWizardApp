{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _expoAppLoading = _interopRequireDefault(require(\"expo-app-loading\"));\n\nvar _NavBar = _interopRequireDefault(require(\"./src/components/NavBar\"));\n\nvar _colors = _interopRequireDefault(require(\"./src/styles/colors.js\"));\n\nvar _useFonts = _interopRequireDefault(require(\"./src/hooks/useFonts.js\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/jackdavey/SeniorDesign/WageWizardApp/App.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nglobal.globalCustomFontUse = true;\n\nvar App = function App() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      IsReady = _useState2[0],\n      SetIsReady = _useState2[1];\n\n  var LoadFonts = function _callee() {\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap((0, _useFonts.default)());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!IsReady) {\n    return _react.default.createElement(_expoAppLoading.default, {\n      startAsync: LoadFonts,\n      onFinish: function onFinish() {\n        return SetIsReady(true);\n      },\n      onError: function onError() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return _react.default.createElement(_native.NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, _react.default.createElement(_NavBar.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.SafeAreaView, {\n    style: {\n      backgroundColor: _colors.default.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      flex: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600'\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400'\n  },\n  highlight: {\n    fontWeight: '700'\n  }\n});\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["/Users/jackdavey/SeniorDesign/WageWizardApp/App.tsx"],"names":["global","globalCustomFontUse","App","IsReady","SetIsReady","LoadFonts","backgroundColor","COLORS","primary","flexDirection","flex","styles","StyleSheet","create","sectionContainer","marginTop","paddingHorizontal","sectionTitle","fontSize","fontWeight","sectionDescription","highlight"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;;AAgBAA,MAAM,CAACC,mBAAP,GAA6B,IAA7B;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,kBAA8B,qBAAS,KAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACV,wBADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAGA,MAAI,CAACF,OAAL,EAAc;AACZ,WACE,6BAAC,uBAAD;AACE,MAAA,UAAU,EAAEE,SADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,mBAAM,CAAE,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAGD,SACA,6BAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,6BAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,6BAAC,yBAAD;AAAc,IAAA,KAAK,EAAE;AAAEE,MAAAA,eAAe,EAAEC,gBAAOC;AAA1B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQK,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARL,CADA;AAoBD,CApCD;;AAwCA,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE,EADK;AAEhBC,IAAAA,iBAAiB,EAAE;AAFH,GADa;AAK/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,UAAU,EAAE;AAFA,GALiB;AAS/BC,EAAAA,kBAAkB,EAAE;AAClBL,IAAAA,SAAS,EAAE,CADO;AAElBG,IAAAA,QAAQ,EAAE,EAFQ;AAGlBC,IAAAA,UAAU,EAAE;AAHM,GATW;AAc/BE,EAAAA,SAAS,EAAE;AACTF,IAAAA,UAAU,EAAE;AADH;AAdoB,CAAlB,CAAf;;eAmBejB,G","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport React, { useState } from 'react';\n//import { useFonts } from 'expo-font';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport NavBar from './src/components/NavBar';\nimport Header from './src/components/Header';\nimport COLORS from './src/styles/colors.js';\nimport useFonts from './src/hooks/useFonts.js';\n\nimport {\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  useColorScheme,\n  View,\n} from 'react-native';\n\n\n\n/////////////////// SET CUSTOM FONT USAGE //////////////////////\n\n//Custom fonts display properly in simulators, but trigger errors when run with Expo go.\n//To enable or disable custom fonts, set the following value\nglobal.globalCustomFontUse = true;\n\n/////////////////// SET CUSTOM FONT USAGE //////////////////////\n\n\n\n\nconst App = () => {\n  const [IsReady, SetIsReady] = useState(false);\n  const LoadFonts = async() => {\n    await useFonts();\n  };\n  if (!IsReady) {\n    return (\n      <AppLoading\n        startAsync={LoadFonts}\n        onFinish={() => SetIsReady(true)}\n        onError={() => {}}\n      />\n    );\n  }\n  \n\n  return (\n  <NavigationContainer>\n      \n      {/* Currently, the header is generated inside the NavBar component. This will need to be separated\n      to allow for navigation to the iew page  */}\n      {/* <Header />\n      */}\n      <NavBar />\n      <SafeAreaView style={{ backgroundColor: COLORS.primary }}/>\n       <View style={{ flexDirection: 'row', flex: 0 }}> \n          {/* \n          Change the appearance of the area behind the home bar\n          <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.active }} />\n          <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.primary }} />\n          <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.primary }} />\n          <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.primary }} /> */}\n      </View> \n    </NavigationContainer>\n\n  );\n}\n\n/* Somehow pull active tab from NavBar props to set color of bacgrkound of correspondign SafeAreaViewObjects above*/ \n\nconst styles = StyleSheet.create({\n  sectionContainer: {\n    marginTop: 32,\n    paddingHorizontal: 24,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n  },\n  sectionDescription: {\n    marginTop: 8,\n    fontSize: 18,\n    fontWeight: '400',\n  },\n  highlight: {\n    fontWeight: '700',\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}