{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _decorateMapComponent = _interopRequireWildcard(require(\"./decorateMapComponent\"));\n\nvar _jsxFileName = \"/Users/jackdavey/SeniorDesign/WageWizardApp/node_modules/react-native-maps/lib/components/MapUrlTile.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\nvar propTypes = (0, _extends2.default)({}, viewPropTypes, {\n  urlTemplate: _propTypes.default.string.isRequired,\n  zIndex: _propTypes.default.number,\n  maximumZ: _propTypes.default.number,\n  maximumNativeZ: _propTypes.default.number,\n  minimumZ: _propTypes.default.number,\n  shouldReplaceMapContent: _propTypes.default.bool,\n  tileSize: _propTypes.default.number,\n  doubleTileSize: _propTypes.default.bool,\n  flipY: _propTypes.default.bool,\n  tileCachePath: _propTypes.default.string,\n  tileCacheMaxAge: _propTypes.default.number,\n  offlineMode: _propTypes.default.bool,\n  opacity: _propTypes.default.number\n});\n\nvar MapUrlTile = function (_React$Component) {\n  (0, _inherits2.default)(MapUrlTile, _React$Component);\n\n  var _super = _createSuper(MapUrlTile);\n\n  function MapUrlTile() {\n    (0, _classCallCheck2.default)(this, MapUrlTile);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(MapUrlTile, [{\n    key: \"render\",\n    value: function render() {\n      var AIRMapUrlTile = this.getAirComponent();\n      return _react.default.createElement(AIRMapUrlTile, (0, _extends2.default)({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n  return MapUrlTile;\n}(_react.default.Component);\n\nMapUrlTile.propTypes = propTypes;\n\nvar _default = (0, _decorateMapComponent.default)(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: _decorateMapComponent.SUPPORTED,\n      android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/jackdavey/SeniorDesign/WageWizardApp/node_modules/react-native-maps/lib/components/MapUrlTile.js"],"names":["viewPropTypes","ViewPropTypes","View","propTypes","urlTemplate","PropTypes","string","isRequired","zIndex","number","maximumZ","maximumNativeZ","minimumZ","shouldReplaceMapContent","bool","tileSize","doubleTileSize","flipY","tileCachePath","tileCacheMaxAge","offlineMode","opacity","MapUrlTile","AIRMapUrlTile","getAirComponent","props","React","Component","componentType","providers","google","ios","SUPPORTED","android","USES_DEFAULT_IMPLEMENTATION"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;AAMA,IAAMA,aAAa,GAAGC,8BAAiBC,kBAAKC,SAA5C;AAEA,IAAMA,SAAS,8BACVH,aADU;AAObI,EAAAA,WAAW,EAAEC,mBAAUC,MAAV,CAAiBC,UAPjB;AAgBbC,EAAAA,MAAM,EAAEH,mBAAUI,MAhBL;AAsBbC,EAAAA,QAAQ,EAAEL,mBAAUI,MAtBP;AA6BbE,EAAAA,cAAc,EAAEN,mBAAUI,MA7Bb;AAmCbG,EAAAA,QAAQ,EAAEP,mBAAUI,MAnCP;AA0CbI,EAAAA,uBAAuB,EAAER,mBAAUS,IA1CtB;AAgDbC,EAAAA,QAAQ,EAAEV,mBAAUI,MAhDP;AAyDbO,EAAAA,cAAc,EAAEX,mBAAUS,IAzDb;AAiEbG,EAAAA,KAAK,EAAEZ,mBAAUS,IAjEJ;AA8EbI,EAAAA,aAAa,EAAEb,mBAAUC,MA9EZ;AAsFba,EAAAA,eAAe,EAAEd,mBAAUI,MAtFd;AA+FbW,EAAAA,WAAW,EAAEf,mBAAUS,IA/FV;AAqGbO,EAAAA,OAAO,EAAEhB,mBAAUI;AArGN,EAAf;;IAwGMa,U;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AACA,aAAO,6BAAC,aAAD,6BAAmB,KAAKC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;EAJsBC,eAAMC,S;;AAO/BL,UAAU,CAACnB,SAAX,GAAuBA,SAAvB;;eAEe,mCAAqBmB,UAArB,EAAiC;AAC9CM,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEC,+BADC;AAENC,MAAAA,OAAO,EAAEC;AAFH;AADC;AAFmC,CAAjC,C","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ViewPropTypes, View } from 'react-native';\n\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime\n   * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png\n   */\n  urlTemplate: PropTypes.string.isRequired,\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is -1.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * The maximum zoom level for this tile overlay.\n   *\n   */\n  maximumZ: PropTypes.number,\n\n  /**\n   * (Optional) The maximum native zoom level for this tile overlay. Tiles are auto-scaled for higher\n   * zoom levels.\n   *\n   */\n  maximumNativeZ: PropTypes.number,\n\n  /**\n   * The minimum zoom level for this tile overlay.\n   *\n   */\n  minimumZ: PropTypes.number,\n\n  /**\n   * Corresponds to MKTileOverlay canReplaceMapContent.\n   *\n   * @platform ios\n   */\n  shouldReplaceMapContent: PropTypes.bool,\n\n  /**\n   * (Optional) Tile size only, default size is 256 (for tiles of 256 * 256 pixels)\n   *\n   */\n  tileSize: PropTypes.number,\n\n  /**\n   * (Optional) Doubles tile size from 256 to 512 utilising higher zoom levels i.e.\n   * loading 4 higher zoom level tiles and combining them for one high-resolution\n   * tile. iOS does this automatically, even if it is not desirable always.\n   *\n   *  @platform android\n   */\n  doubleTileSize: PropTypes.bool,\n\n  /**\n   *\n   * Allow tiles using the TMS coordinate system (origin bottom left)\n   * to be used, and displayed at their correct coordinates\n   *\n   */\n  flipY: PropTypes.bool,\n\n  /**\n   *\n   * (Optional) Enable caching of tiles in the specified directory. Directory\n   * can be specified either as a normal path or in URL format (file://). Tiles\n   * are stored in tileCachePath directory as follows \"/{z}/{x}/{y}\" i.e. in\n   * sub-directories 2-levels deep, filename tile y-coordinate without any\n   * filetype-extension.\n   * NB! All cache management needs to be implemented by client e.g. deleting tiles\n   * to manage use of storage space etc.\n   *\n   */\n  tileCachePath: PropTypes.string,\n\n  /**\n   * (Optional) Defines how maximum age in seconds for cached tile before they\n   * are refreshed. NB! Refresh logic is \"serve-stale-while-refresh\" i.e. to\n   * ensure map availability a stale (over max age) tile is served while a tile\n   * refresh process is started in the background.\n   */\n  tileCacheMaxAge: PropTypes.number,\n\n  /**\n   * (Optional) Sets offline-mode. In offline-mode tiles are not fetched from\n   * the tile servers, rather only tiles stored in the cache directory are used.\n   * Furthermore automated tile scaling is activated: if tile at a desired zoom\n   * level is not found from the cache directory, then lower zoom level tile is\n   * used (until minimumZ) and scaled.\n   */\n  offlineMode: PropTypes.bool,\n\n  /**\n   * (Optional) Map layer opacity. Value between 0 - 1, with 0 meaning fully\n   * transparent.\n   */\n  opacity: PropTypes.number,\n};\n\nclass MapUrlTile extends React.Component {\n  render() {\n    const AIRMapUrlTile = this.getAirComponent();\n    return <AIRMapUrlTile {...this.props} />;\n  }\n}\n\nMapUrlTile.propTypes = propTypes;\n\nexport default decorateMapComponent(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"script"}